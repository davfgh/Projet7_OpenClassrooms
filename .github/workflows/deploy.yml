name: Deploy to Azure

on:
  push:
    branches:
      - main
      - api-deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Debug Azure WebApp Existence
      run: |
        az webapp show --name ${{ vars.AZURE_WEBAPP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP }} --output table

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies (production)
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements-prod.txt
        pip install pytest gunicorn numpy

    - name: Start API for testing
      run: |
        source .venv/bin/activate
        python api/app.py &  # Lance l'API en arrière-plan
        sleep 5  # Donne du temps à l'API pour démarrer

    - name: Run unit tests
      run: |
        source .venv/bin/activate
        pytest tests/test_api.py

    - name: Test API locally before ZIP
      run: |
        source .venv/bin/activate
        gunicorn -w 2 api.app:app --bind 0.0.0.0:8000 &
        sleep 5
        curl -I http://127.0.0.1:8000 || (echo "API FAILED TO START LOCALLY"; exit 1)
        pkill gunicorn

    - name: Create ZIP Package
      run: |
        zip -r app_package.zip . \
        -x "*.git*" \
        "*.venv*" \
        "*__pycache__*" \
        "*.ipynb*" \
        "*.ipynb_checkpoints*" \
        "*.csv*" \
        "*.db*" \
        "*.log*" \
        "mlruns/*" \
        "tests/*"

    - name: Check ZIP size
      run: ls -lh app_package.zip

    - name: Set execute permission for startup script
      run: chmod +x startup.sh

    - name: Debug Startup File
      run: |
        ls -l startup.sh
        cat startup.sh

    - name: Restart Azure Web App
      run: |
        az webapp restart --name ${{ vars.AZURE_WEBAPP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP }}

    - name: Deploy to Azure Web App
      timeout-minutes: 10
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ vars.AZURE_WEBAPP_NAME }}
        resource-group-name: ${{ vars.RESOURCE_GROUP }}
        package: app_package.zip
        startup-command: "./startup.sh"

    - name: Configure Azure Web App startup
      run: |
        az webapp config set --name ${{ vars.AZURE_WEBAPP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP }} --startup-file "./startup.sh"

    - name: Wait for API to be ready
      run: |
        echo "Waiting for API to start..."
        sleep 40
        response=$(curl -s -o /dev/null -w "%{http_code}" "https://${{ vars.AZURE_WEBAPP_NAME }}.azurewebsites.net")
        if [ "$response" -eq 200 ]; then
          echo "API is up!"
          exit 0
        else
          echo "API did not start properly. Response code: $response"
          exit 1
        fi

    - name: Test deployed API
      run: |
        curl -X POST "https://${{ vars.AZURE_WEBAPP_NAME }}.azurewebsites.net/predict" \
        -H "Content-Type: application/json" -d '{}'
